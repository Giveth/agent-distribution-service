name: staging-pipeline

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: [lint, test]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: staging
          fetch-depth: 0
      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build image and push to GitHub Packages
        uses: docker/build-push-action@v6
        with:
          push: true
          no-cache: true
          repository: giveth/agent-distribution-service
          tags: |
            ghcr.io/giveth/agent-distribution-service:staging

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd agent-distribution-service
            git checkout staging
            git pull
            docker compose -f docker-compose-staging.yml down
            docker compose -f docker-compose-staging.yml pull
            docker compose -f docker-compose-staging.yml up -d agent-distribution-service
            docker image prune -a --force
            sleep 20
            docker logs agent-distribution-service
